{"version":3,"sources":["components/Helpers.js","services/persons.js","App.js","index.js"],"names":["Person","person","deletePerson","name","number","onClick","Filter","props","value","filter","onChange","handle","Form","onSubmit","submit","handleName","handleNumber","type","Notification","message","className","ErrorMessage","Persons","persons","map","id","baseUrl","getAll","a","axios","get","request","data","post","personObj","destroy","delete","update","newObject","put","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","notice","setNotice","errorMessage","setErrorMessage","useEffect","personService","then","currentPersons","personsToShow","toLowerCase","includes","event","target","preventDefault","length","window","confirm","find","changedPerson","returnedPerson","setTimeout","catch","err","console","log","updatePersonNumber","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61221ee0.chunk.js","sourcesContent":["import React from 'react';\n\nconst Person = ({ person, deletePerson }) => {\n    return (\n        <li>\n            {person.name}: {person.number}{' '}\n            <button onClick={deletePerson}>Delete</button>\n        </li>\n    );\n};\n\nconst Persons = ({ persons, deletePerson }) => {\n    return (\n        <ul>\n            {persons.map(person => (\n                <Person\n                    key={person.name}\n                    person={person}\n                    deletePerson={() => deletePerson(person.id)}\n                />\n            ))}\n        </ul>\n    );\n};\n\nconst Filter = props => {\n    return (\n        <div>\n            filter: <input value={props.filter} onChange={props.handle} />\n        </div>\n    );\n};\n\nconst Form = props => {\n    return (\n        <form onSubmit={props.submit}>\n            <div>\n                name: <input value={props.name} onChange={props.handleName} />\n                <br />\n                number:{' '}\n                <input value={props.number} onChange={props.handleNumber} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    );\n};\n\nconst Notification = ({ message }) => {\n    if (message === null) return null;\n\n    return <div className=\"notice\">{message}</div>;\n};\n\nconst ErrorMessage = ({ message }) => {\n    if (message === null) return null;\n\n    return <div className=\"error\">{message}</div>;\n};\n\nexport default Persons;\nexport { Filter, Form, Notification, ErrorMessage };\n","import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nconst getAll = async () => {\n    const request = await axios.get(baseUrl);\n    return request.data;\n};\n\nconst post = async personObj => {\n    const request = await axios.post(baseUrl, personObj);\n    return request.data;\n};\n\nconst destroy = async id => {\n    const request = await axios.delete(`${baseUrl}/${id}`);\n    return request;\n};\n\nconst update = async (id, newObject) => {\n    const request = await axios.put(`${baseUrl}/${id}`, newObject);\n    return request.data;\n};\n\nexport default { getAll, post, destroy, update };\n","import React, { useState, useEffect } from 'react';\nimport Persons, {\n    Form,\n    Filter,\n    Notification,\n    ErrorMessage,\n} from './components/Helpers';\nimport personService from './services/persons';\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState('');\n    const [newNumber, setNewNumber] = useState('');\n    const [filter, setFilter] = useState('');\n    const [notice, setNotice] = useState(null);\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    const getPersons = () => {\n        personService\n            .getAll()\n            .then(currentPersons => setPersons(currentPersons));\n    };\n    useEffect(getPersons, []);\n\n    const updatePersonNumber = () => {\n        const person = persons.find(person => person.name === newName);\n        const changedPerson = { ...person, number: newNumber };\n        personService\n            .update(changedPerson.id, changedPerson)\n            .then(returnedPerson => {\n                setPersons(\n                    persons.map(person =>\n                        person.id !== returnedPerson.id\n                            ? person\n                            : returnedPerson\n                    )\n                );\n                setNotice(`'${returnedPerson.name}' was updated`);\n                setTimeout(() => setNotice(null), 5000);\n            })\n            .catch(err => {\n                console.log(err);\n\n                setErrorMessage(\n                    `'${changedPerson.name}' has already been removed from the server`\n                );\n                setTimeout(() => setErrorMessage(null), 5000);\n                setPersons(\n                    persons.filter(person => person.id !== changedPerson.id)\n                );\n            });\n    };\n\n    const addPerson = event => {\n        event.preventDefault();\n\n        if (persons.filter(person => person.name === newName).length > 0) {\n            const result = window.confirm(\n                `${newName} is already in the phonebook! Update phone number?`\n            );\n            if (result === true) {\n                updatePersonNumber();\n            }\n            setNewName('');\n            setNewNumber('');\n            return null;\n        }\n\n        const personObj = {\n            name: newName,\n            number: newNumber,\n        };\n\n        personService.post(personObj).then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson));\n            setNewName('');\n            setNewNumber('');\n            setNotice(`'${returnedPerson.name}' was created`);\n            setTimeout(() => setNotice(null), 5000);\n        });\n    };\n\n    const deletePerson = id => {\n        const name = persons.find(person => person.id === id).name;\n        if (window.confirm(`Delete ${name}?`)) {\n            personService.destroy(id).then(() => {\n                setPersons(persons.filter(person => person.id !== id));\n            });\n        }\n    };\n\n    const handleNameChange = event => {\n        setNewName(event.target.value);\n    };\n    const handleNumberChange = event => {\n        setNewNumber(event.target.value);\n    };\n    const handleFilterChange = event => {\n        setFilter(event.target.value);\n    };\n\n    const personsToShow = persons.filter(person => {\n        return person.name.toLowerCase().includes(filter.toLowerCase());\n    });\n\n    return (\n        <>\n            <h1>Phonebook</h1>\n            <Notification message={notice} />\n            <ErrorMessage message={errorMessage} />\n            <Filter filter={filter} handle={handleFilterChange} />\n            <h2>Add person</h2>\n            <Form\n                submit={addPerson}\n                name={newName}\n                number={newNumber}\n                handleName={handleNameChange}\n                handleNumber={handleNumberChange}\n            />\n            <h2>Numbers</h2>\n            <Persons persons={personsToShow} deletePerson={deletePerson} />\n        </>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}